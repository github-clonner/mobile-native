// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`WithdrawScreen renders correctly 1`] = `
<RCTScrollView
  ListHeaderComponent={
    <View
      style={
        Object {
          "paddingBottom": 30,
        }
      }
    >
      <Text
        style={
          Object {
            "color": "#777777",
            "letterSpacing": 0.35,
            "marginBottom": 20,
          }
        }
      >
        You can request to withdraw up to 0 tokens from your rewards to your 
        <Text
          style={
            Object {
              "fontWeight": "700",
            }
          }
        >
          OnChain
        </Text>
         wallet.
        

        <Text
          style={
            Object {
              "fontSize": 11,
            }
          }
        >
          Note: a small amount of ETH will be charged to cover the transaction fee. Withdrawals 
          <Text
            style={
              Object {
                "fontWeight": "700",
              }
            }
          >
            go through an approval process
          </Text>
           and may take up to 72 hours to complete
        </Text>
        
      </Text>
      <View
        style={
          Object {
            "alignItems": "center",
            "flexDirection": "row",
          }
        }
      >
        <TextInput
          allowFontScaling={true}
          editable={false}
          keyboardType="numeric"
          onChangeText={[Function]}
          placeholder="Amount"
          rejectResponderTermination={true}
          returnKeyType="go"
          style={
            Object {
              "backgroundColor": "#eee",
              "borderRadius": 3,
              "flexGrow": 1,
              "fontSize": 18,
              "fontWeight": "700",
              "marginRight": 10,
              "padding": 8,
              "textAlign": "right",
            }
          }
          underlineColorAndroid="transparent"
          value="0"
        />
        <TransparentButton
          color="#4690D6"
          disabled={true}
          disabledColor="#cccccc"
          onPress={[Function]}
          style={
            Object {
              "minWidth": 100,
            }
          }
          title={
            <ActivityIndicator
              animating={true}
              color="#4690D6"
              hidesWhenStopped={true}
              size="small"
            />
          }
        />
      </View>
    </View>
  }
  data={Array []}
  disableVirtualization={false}
  getItem={[Function]}
  getItemCount={[Function]}
  horizontal={false}
  initialNumToRender={10}
  keyExtractor={[Function]}
  maxToRenderPerBatch={10}
  numColumns={1}
  onContentSizeChange={[Function]}
  onEndReachedThreshold={2}
  onLayout={[Function]}
  onMomentumScrollEnd={[Function]}
  onScroll={[Function]}
  onScrollBeginDrag={[Function]}
  onScrollEndDrag={[Function]}
  removeClippedSubviews={false}
  renderItem={[Function]}
  scrollEventThrottle={50}
  stickyHeaderIndices={Array []}
  style={
    Object {
      "backgroundColor": "#fff",
      "flex": 1,
      "padding": 10,
    }
  }
  updateCellsBatchingPeriod={50}
  viewabilityConfigCallbackPairs={Array []}
  windowSize={21}
>
  <View>
    <View
      onLayout={[Function]}
    >
      <View
        style={
          Object {
            "paddingBottom": 30,
          }
        }
      >
        <Text
          style={
            Object {
              "color": "#777777",
              "letterSpacing": 0.35,
              "marginBottom": 20,
            }
          }
        >
          You can request to withdraw up to 0 tokens from your rewards to your 
          <Text
            style={
              Object {
                "fontWeight": "700",
              }
            }
          >
            OnChain
          </Text>
           wallet.
          

          <Text
            style={
              Object {
                "fontSize": 11,
              }
            }
          >
            Note: a small amount of ETH will be charged to cover the transaction fee. Withdrawals 
            <Text
              style={
                Object {
                  "fontWeight": "700",
                }
              }
            >
              go through an approval process
            </Text>
             and may take up to 72 hours to complete
          </Text>
          
        </Text>
        <View
          style={
            Object {
              "alignItems": "center",
              "flexDirection": "row",
            }
          }
        >
          <TextInput
            allowFontScaling={true}
            editable={false}
            keyboardType="numeric"
            onChangeText={[Function]}
            placeholder="Amount"
            rejectResponderTermination={true}
            returnKeyType="go"
            style={
              Object {
                "backgroundColor": "#eee",
                "borderRadius": 3,
                "flexGrow": 1,
                "fontSize": 18,
                "fontWeight": "700",
                "marginRight": 10,
                "padding": 8,
                "textAlign": "right",
              }
            }
            underlineColorAndroid="transparent"
            value="0"
          />
          <View
            accessible={true}
            focusable={true}
            isTVSelectable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Array [
                Object {
                  "borderColor": "#ececec",
                  "borderRadius": 30,
                  "borderWidth": 1,
                  "padding": 8,
                },
                Object {
                  "backgroundColor": "transparent",
                },
                Object {
                  "minWidth": 100,
                },
                Object {
                  "borderColor": "#4690D6",
                },
                Object {
                  "borderColor": "#cccccc",
                },
              ]
            }
          >
            <ActivityIndicator
              animating={true}
              color="#4690D6"
              hidesWhenStopped={true}
              size="small"
              style={null}
            />
          </View>
        </View>
      </View>
    </View>
  </View>
</RCTScrollView>
`;
