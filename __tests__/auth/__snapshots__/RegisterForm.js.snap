// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`RegisterForm component should renders correctly 1`] = `
<View
  style={
    Array [
      undefined,
      undefined,
    ]
  }
>
  <RCTScrollView
    contentContainerStyle={
      Array [
        undefined,
        undefined,
      ]
    }
    style={
      Array [
        undefined,
        undefined,
      ]
    }
  >
    <View>
      <RCTSafeAreaView
        emulateUnlessSupported={true}
      >
        <View
          accessible={true}
          focusable={false}
          isTVSelectable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "opacity": 1,
            }
          }
        >
          <Text
            allowFontScaling={false}
            style={
              Array [
                Object {
                  "color": undefined,
                  "fontSize": 34,
                },
                undefined,
                Object {
                  "fontFamily": "Material Icons",
                  "fontStyle": "normal",
                  "fontWeight": "normal",
                },
                Object {},
              ]
            }
          >
            
          </Text>
        </View>
        <Text
          style={
            Array [
              undefined,
              undefined,
              undefined,
              undefined,
            ]
          }
        >
          Join the Revolution
        </Text>
        <Text
          style={
            Array [
              undefined,
              undefined,
            ]
          }
        />
        <View>
          <View
            style={
              Array [
                Object {
                  "flexDirection": "row",
                  "justifyContent": "space-between",
                },
              ]
            }
          >
            <View
              style={
                Object {
                  "flexDirection": "row",
                  "justifyContent": "space-between",
                }
              }
            >
              <Text
                style={
                  Array [
                    Object {
                      "color": "#AEB0B8",
                      "fontFamily": "Roboto",
                      "fontSize": 16,
                      "fontWeight": "600",
                      "marginBottom": 5,
                    },
                    undefined,
                  ]
                }
              >
                Username
              </Text>
            </View>
          </View>
          <TextInput
            allowFontScaling={true}
            autoCapitalize="none"
            editable={false}
            onChangeText={[Function]}
            placeholder=""
            placeholderTextColor="#444"
            rejectResponderTermination={true}
            returnKeyType="done"
            style={
              Array [
                undefined,
                undefined,
              ]
            }
            testID="registerUsernameInput"
            underlineColorAndroid="transparent"
            value=""
          />
        </View>
        <View>
          <View
            style={
              Array [
                Object {
                  "flexDirection": "row",
                  "justifyContent": "space-between",
                },
              ]
            }
          >
            <View
              style={
                Object {
                  "flexDirection": "row",
                  "justifyContent": "space-between",
                }
              }
            >
              <Text
                style={
                  Array [
                    Object {
                      "color": "#AEB0B8",
                      "fontFamily": "Roboto",
                      "fontSize": 16,
                      "fontWeight": "600",
                      "marginBottom": 5,
                    },
                    undefined,
                  ]
                }
              >
                Email
              </Text>
            </View>
          </View>
          <TextInput
            allowFontScaling={true}
            autoCapitalize="none"
            editable={false}
            onChangeText={[Function]}
            placeholder=""
            placeholderTextColor="#444"
            rejectResponderTermination={true}
            returnKeyType="done"
            style={
              Array [
                undefined,
                undefined,
              ]
            }
            testID="registerEmailInput"
            underlineColorAndroid="transparent"
            value=""
          />
        </View>
        <View>
          <View
            style={
              Array [
                Object {
                  "flexDirection": "row",
                  "justifyContent": "space-between",
                },
              ]
            }
          >
            <View
              style={
                Object {
                  "flexDirection": "row",
                  "justifyContent": "space-between",
                }
              }
            >
              <Text
                style={
                  Array [
                    Object {
                      "color": "#AEB0B8",
                      "fontFamily": "Roboto",
                      "fontSize": 16,
                      "fontWeight": "600",
                      "marginBottom": 5,
                    },
                    undefined,
                  ]
                }
              >
                Password
              </Text>
            </View>
          </View>
          <TextInput
            allowFontScaling={true}
            autoCapitalize="none"
            editable={false}
            onBlur={[Function]}
            onChangeText={[Function]}
            onFocus={[Function]}
            placeholder=""
            placeholderTextColor="#444"
            rejectResponderTermination={true}
            returnKeyType="done"
            secureTextEntry={true}
            style={
              Array [
                undefined,
                undefined,
              ]
            }
            testID="registerPasswordInput"
            underlineColorAndroid="transparent"
            value=""
          />
        </View>
        <View>
          <View
            style={
              Array [
                Object {
                  "flexDirection": "row",
                  "justifyContent": "space-between",
                },
              ]
            }
          >
            <View
              style={
                Object {
                  "flexDirection": "row",
                  "justifyContent": "space-between",
                }
              }
            >
              <Text
                style={
                  Array [
                    Object {
                      "color": "#AEB0B8",
                      "fontFamily": "Roboto",
                      "fontSize": 16,
                      "fontWeight": "600",
                      "marginBottom": 5,
                    },
                    undefined,
                  ]
                }
              >
                Confirm Password
              </Text>
            </View>
          </View>
          <TextInput
            allowFontScaling={true}
            autoCapitalize="none"
            editable={true}
            onChangeText={[Function]}
            placeholder=""
            placeholderTextColor="#444"
            rejectResponderTermination={true}
            returnKeyType="done"
            secureTextEntry={true}
            style={
              Array [
                undefined,
                undefined,
              ]
            }
            testID="registerPasswordConfirmInput"
            underlineColorAndroid="transparent"
            value=""
          />
        </View>
        <View
          accessible={true}
          focusable={true}
          isTVSelectable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "backgroundColor": "#fafafa",
              "borderColor": "#ededed",
              "borderRadius": 3,
              "borderWidth": 1,
              "margin": 5,
              "marginLeft": 10,
              "marginRight": 10,
              "opacity": 1,
              "padding": 10,
            }
          }
          testID="checkbox"
        >
          <View
            style={
              Object {
                "alignItems": "center",
                "flexDirection": "row",
              }
            }
          >
            <Text
              allowFontScaling={false}
              style={
                Array [
                  Object {
                    "color": "#bfbfbf",
                    "fontSize": 24,
                  },
                  Object {
                    "minWidth": 24,
                  },
                  Object {
                    "fontFamily": "FontAwesome",
                    "fontStyle": "normal",
                    "fontWeight": "normal",
                  },
                  Object {},
                ]
              }
            >
              
            </Text>
            <Text
              style={
                Array [
                  undefined,
                  undefined,
                ]
              }
            >
              I have read and accept the
               
              <Text
                onPress={[Function]}
              >
                terms of use
              </Text>
            </Text>
          </View>
        </View>
        <View>
          <View
            accessible={true}
            focusable={true}
            isTVSelectable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "backgroundColor": "#5DBAC0",
                "borderRadius": 36,
                "opacity": 1,
              }
            }
            testID="registerCreateButton"
          >
            <Text
              style={
                Array [
                  Object {
                    "color": "white",
                  },
                  undefined,
                ]
              }
            >
               
              Join Minds Now
               
            </Text>
          </View>
          <Text
            style={
              Array [
                undefined,
                undefined,
                undefined,
                undefined,
              ]
            }
          >
            Already have an account? 
            <Text
              style={
                Array [
                  undefined,
                  undefined,
                ]
              }
            >
              Login
            </Text>
            
          </Text>
        </View>
      </RCTSafeAreaView>
    </View>
  </RCTScrollView>
</View>
`;
